
@{
    /**/

    ViewBag.Title = "Lesson 1";
}

@section Scripts
{

    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

    <style type="text/css">

        #word-section {
            border: 1px solid #999;
            background-color: #fff;
        }



        section {
            width: 90%;
            margin: 0 auto;
            padding: 0.5em;
        }

        #word-section {
            font-family: Arial;
            font-size: 1.5em;
            height: 4em;
            line-height: 2em;
            /* hide 3rd line of text */
            border-radius: 0.25em;
            position: relative;
            overflow: hidden;
        }

            #word-section > span {
                display: inline-block;
                margin-left: 1em;
                /* emulate spaces between words */
            }

        #type-section {
            text-align: center;
        }

            #type-section > * {
                font-size: 1.5em;
                display: inline-block;
                border-radius: 0.25em;
                border: none;
                color: #fff;
                vertical-align: middle;
            }

        #typebox {
            font-family: Arial;
            width: 64%;
            color: #000;
            padding: 0.5em;
            box-shadow: -1px -1px 5px #383838;
        }

            #typebox:focus {
                outline: none;
            }

        #timer {
            width: 4em;
            background-color: #467F21;
            margin-right: 0;
        }



        #results {
            font-family: sans-serif;
            text-align: center;
            margin: 0 1%;
            display: block;
        }

            #results li {
                list-style: none;
            }

                #results li:first-child {
                    font-size: 1.5em;
                }

                #results li:nth-child(2) {
                    font-size: 0.8em;
                    line-height: 1em;
                }

            #results #results-stats {
                font-size: 0.6em;
            }




        /* hides small bit of residule text after scrolling */
        .magic-box {
            position: fixed;
            width: inherit;
            height: 0.5em;
            top: 54px;
            background-color: #fff;
        }

        .waiting {
            text-align: center;
            line-height: 1.5em;
            font-size: 3em;
        }

        .current-word {
            background-color: #dddddd;
        }

        .correct-word-c {
            color: #93C572;
        }

        .incorrect-word-c {
            color: #e50000;
        }

        .incorrect-word-bg {
            background-color: #e50000;
        }

       /*graph div property*/
        #graphrowone {
            visibility: hidden;
        }
        #graphrowtwo {
            visibility: hidden;
        }

    </style>



    <script type="text/javascript">

       


        // jQuery like selection of elements.
        "use strict";

        window.$ = document.querySelectorAll.bind(document);

        // Changes for  Firefox
        if (navigator.userAgent.match(/firefox/i)) {
            // Unicode font sizes
            var ffBtn = "font-weight: normal; font-size: 2em; margin-left: 0.3em;";
            $("#restart-symbol")[0].setAttribute("style", ffBtn);

            var ffwait = "line-height: 1em; font-size: 4em;";
            $(".waiting")[0].setAttribute("style", ffwait);
        }

        /////////////////////////////////////////

        // Sorted list of the 500 most common English words.
        var wordList = ["ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ", "ੋ", "ੇ", "੍", "ਿ", "ੁ", "ਪ", "ਰ", "ਕ", "ਤ", "ਚ", "ਟ", "ੋ", "ੇ", "ੁ", "ਰ", "੍", "ਕ", "ਿ", "ਟ", "ਚ"];

        //////////////////////////////////////////

        // Knuth-Fisher-Yates Shuffle
        // http://bost.ocks.org/mike/shuffle/
        function shuffle(array) {
            var m = array.length,
                t = undefined,
                i = undefined;
            // While there remain elements to shuffle…
            while (m) {
                // Pick a remaining element…
                i = Math.floor(Math.random() * m--);
                // And swap it with the current element.
                t = array[m];
                array[m] = array[i];
                array[i] = t;
            }
            return array;
        }

        // Add words to word-section

        function addWords() {
            // clear existing word-section
            var wordSection = $("#word-section")[0];
            wordSection.innerHTML = "";

            for (var i = 300; i > 0; i--) {
                var words = shuffle(wordList);
                var wordSpan = "<span>" + words[i] + "</span>";
                wordSection.innerHTML += wordSpan;
            }
            // mark first word as current-word
            wordSection.firstChild.classList.add("current-word");

            // mark last word with magic-box
            // let magicBox = document.createElement("DIV");
            // magicBox.classList.add("magic-box");
            // wordSection.appendChild(magicBox);
        }

        //////////////////////////////////////////

        // Word Colors
        var colorCurrentWord = " #dddddd";
        var colorCorrectWord = "#93C572";
        var colorIncorrectWord = "#e50000";

        // Word Count and other data.
        var wordData = {
            //seconds: 300,
            correct: 0,
            incorrect: 0,
            total: 0,
            typed: 0
        };

       
        
        //////////////////////////////////////////
        // Initial implementation notes:
        // next word on <space>, if empty, then set value=""
        // after <space> if value == current-word, mark as correct-word
        // else, mark as incorrect-word
        // if value.length != current-word[:value.length], mark as incorrect-word
        // else, mark as current-word
        //////////////////////////////////////////

        function checkWord(word) {
            var wlen = word.value.length;
            // how much we have of the current word.
            var current = $(".current-word")[0];
            var currentSubstring = current.innerHTML.substring(0, wlen);
            // check if we have any typing errors
            if (word.value.trim() != currentSubstring) {
                current.classList.add("incorrect-word-bg");
                return false;
            } else {
                current.classList.remove("incorrect-word-bg");
                return true;
            }
        }

        function submitWord(word) {
            // update current-word and
            // keep track of correct & incorrect words
            var current = $(".current-word")[0];

            if (checkWord(word)) {
                current.classList.remove("current-word");
                current.classList.add("correct-word-c");
                wordData.correct += 1;
            } else {
                current.classList.remove("current-word", "incorrect-word-bg");
                current.classList.add("incorrect-word-c");
                wordData.incorrect += 1;
            }
            // update wordData
            wordData.total = wordData.correct + wordData.incorrect;

            // make the next word the new current-word.
            current.nextSibling.classList.add("current-word");
        }

        function clearLine() {
            // remove past words once you get to the next line
            var wordSection = $("#word-section")[0];
            var current = $(".current-word")[0]; // second line (first word)
            var previous = current.previousSibling; // first line (last word)
            var children = $(".correct-word-c, .incorrect-word-c").length;

            // <span>'s on the next line have a greater offsetTop value
            // than those on the top line.
            // Remove words until the first word on the second line
            // is the fistChild of word-section.
            if (current.offsetTop > previous.offsetTop) {
                for (var i = 0; i < children; i++) {
                    wordSection.removeChild(wordSection.firstChild);
                }
            }
        }



        //function typingTest(e) {
        //    // Char:        Key Code:
        //    // <space>      32
        //    // <backspace>  8
        //    // <shift>      16
        //    // [A-Z]        65-90
        //    // [' "]        222

        //    // Get key code of current key pressed.
        //    e = e || window.event;
        //    var kcode = e.keyCode;
        //    var word = $("#typebox")[0];

        //    // check if empty (starts with space)
        //    if (word.value.match(/^\s/g)) {
        //        word.value = "";
        //    } else {
        //        // Only score when timer is on: old condition:checking using p tag is there or not
        //        if (isTimer(wordData.seconds)) {
        //            {
        //                checkWord(word); // checks for typing errors while you type
        //                // <space> submits words
        //                if (kcode == 32) {
        //                    submitWord(word); // keep track of correct / incorrect words
        //                    clearLine(); // get rid of old words
        //                    $("#typebox")[0].value = ""; // clear typebox after each word
        //                }
        //                wordData.typed += 1; // count each valid character typed
        //            } else {
        //                // Display typing test results.
        //                calculateWPM(wordData);
        //            }
        //        }
        //    }




        function typingTest(e) {
            // Char:        Key Code:
            // <space>      32
            // <backspace>  8
            // <shift>      16
            // [A-Z]        65-90
            // [' "]        222

            //start timer
            // markPresent();

            // Get key code of current key pressed.
            e = e || window.event;
            var kcode = e.keyCode;
            var word = $("#typebox")[0];




            //  check if empty (starts with space)
            if (isRunning == false) {
                word.value = "";
                //alert("Clock not running!")
                document.getElementById("errorMessage").innerText = "Please Click on Start!";
            }



            else {
                if (word.value.match(/^\s/g)) {
                    word.value = "";

                }


                else {

                    checkWord(word); // checks for typing errors while you type
                    // <space> submits words
                    if (kcode == 32) {
                        submitWord(word); // keep track of correct / incorrect words
                        clearLine(); // get rid of old words
                        $("#typebox")[0].value = ""; // clear typebox after each word
                    }
                    wordData.typed += 1; // count each valid character typed
                }
            }

        }

      


        /*Timer code*/


        var clock = null;//Define a global variable for the clock
        var isRunning = false;
        var initTime = null;


        function Clock() {

            //disable span error
            document.getElementById("errorMessage").innerText = "";

            //set autofocus to typing textbox
            document.getElementById("typebox").focus();

            //console.log("Called clock");
            if (clock != null) {
                //Clock is running
                //console.log("Stopping clock");
                clearInterval(clock);
                clock = null;
                document.getElementById("clock").innerText = "Start";
                document.getElementById("test").innerText = "";
                isRunning = false;
                addWords(); //to reset word color to black once the user stops the clock 
                //write here function of generating graphs after user clicks the stops
                console.log(wordData.correct);
                console.log(wordData.incorrect);
                console.log(wordData.total);
               
                showDiv();//show graphs after user stops typing
                
            } else {
                //Clock is not running
                //console.log("Starting clock");
                setInitialTime();
                clock = setInterval(updateClock, 1000); // Starts calling updateClock, which should do what your need with the clock.
                document.getElementById("clock").innerText = "Stop"; //Changes the clock button text
                updateClock();
                isRunning = true;
            }
        }

        function setInitialTime() {
            initTime = new Date().getTime();
        }

        function updateClock() {
            //console.log("Clock update");
            let currTime = new Date().getTime(),
                diff = currTime - initTime;
            //console.log("Actual time is " + currTime);
            //console.log("Time inited was " + initTime);
            //console.log(format(diff / 1000));
            document.getElementById("test").innerText = format(diff / 1000);
        }

        function format(seconds) {
            var numhours = parseInt(Math.floor(((seconds % 31536000) % 86400) / 3600), 10);
            var numminutes = parseInt(Math.floor((((seconds % 31536000) % 86400) % 3600) / 60), 10);
            var numseconds = parseInt((((seconds % 31536000) % 86400) % 3600) % 60, 10);
            return ((numhours < 10) ? "0" + numhours : numhours) + ":" + ((numminutes < 10) ? "0" + numminutes : numminutes) + ":" + ((numseconds < 10) ? "0" + numseconds : numseconds);
        }

        //generate chart code

       

      

        function showDiv() {
            //document.getElementById('graphrowone').style.display = "block";
            //document.getElementById('graphrowtwo').style.display = "block";
            rendertypingresults();
            rendergrossspeed();
            rendernetspeed();
            renderaccuracy();
            document.getElementById('graphrowone').style.visibility = 'visible';
            document.getElementById('graphrowtwo').style.visibility = 'visible';
        }

        function rendertypingresults() {
            Chart.defaults.global.defaultFontColor = 'blue';
            var ctx = document.getElementById('myChart').getContext('2d');
            var chart = new Chart(ctx, {
                // The type of chart we want to create
                type: 'bar',

                // The data for our dataset
                data: {
                    labels: ['Total Words', 'Correct Words', 'Incorrect Words'],
                    datasets: [{
                        label: 'Results',
                        backgroundColor: 'rgb(255, 99, 132)',
                        borderColor: 'rgb(255, 99, 132)',
                        data: [wordData.total, wordData.correct, wordData.incorrect],
                        //  data: [3, 5, 6],
                        backgroundColor: ["purple", "green", "red"]
                    }]
                },

                // Configuration options go here
                options: {

                   

                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }],
                        xAxes: [{
                            // Change here
                            barPercentage: 0.2
                        }]
                    }
                }
            });
        }

        function renderaccuracy() {

            //to create chart for accuracy

            Chart.defaults.global.defaultFontColor = 'blue';
            var ctx = document.getElementById('accuracyChart').getContext('2d');
            var chart = new Chart(ctx, {
                // The type of chart we want to create
                type: 'bar',

                // The data for our dataset
                data: {
                    labels: ['Accuracy'],
                    datasets: [{
                        label: 'Accuracy',
                        backgroundColor: 'rgb(255, 99, 132)',
                        borderColor: 'rgb(255, 99, 132)',
                        data: [20],
                       // backgroundColor: ["DarkGoldenRod"]
                    }]
                },

                // Configuration options go here: use percent configurations
                //options: {
                //    scales: {
                //        yAxes: [{
                //            min: 0,
                //            max: 100,
                //            callback: function (value) { return value + "%" }
                //        },
                //            scaleLabel,{
                //            display: true,
                //            labelString: "Percentage"
                //        }

                //        ],
                //        xAxes: [{
                //            // Change here
                //            barPercentage: 0.2
                //        }]
                //    }
                //}


                // Configuration options go here
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }],
                        xAxes: [{
                            // Change here
                            barPercentage: 0.2
                        }]
                    }
                }

            });

        }

        function rendernetspeed() {
            //to create chart for Net speed 

            Chart.defaults.global.defaultFontColor = 'blue';
            var ctx1 = document.getElementById('netspeedChart').getContext('2d');
            var chart = new Chart(ctx1, {
                // The type of chart we want to create
                type: 'bar',

                // The data for our dataset
                data: {
                    labels: ['Net Speed'],
                    datasets: [{
                        label: 'Net Speed',
                        backgroundColor: 'rgb(178,34,34)',
                        borderColor: 'rgb(178,34,34)',
                        data: [30],
                      //  backgroundColor: ["DarkRed"]
                    }]
                },

                // Configuration options go here
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }],
                        xAxes: [{
                            // Change here
                            barPercentage: 0.2
                        }]
                    }
                }
            });
        }


        function rendergrossspeed() {
            //to create chart for Gross Speed

            Chart.defaults.global.defaultFontColor = 'blue';
            var ctx2 = document.getElementById('grossspeedchart').getContext('2d');
            var chart = new Chart(ctx2, {
                // The type of chart we want to create
                type: 'bar',

                // The data for our dataset
                data: {
                    labels: ['Gross Speed '],
                    datasets: [{
                        label: 'Gross Speed',
                        backgroundColor: 'rgb(139,69,19)',
                        borderColor: 'rgb(139,69,19)',
                        data: [20],
                       // backgroundColor: ["MidnightBlue "]
                    }]
                },

                // Configuration options go here
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }],
                        xAxes: [{
                            // Change here
                            barPercentage: 0.2
                        }]
                    }
                }

            });
        }

       








    </script>

    <style type="text/css">
        table, th, td {
            border-collapse: collapse;
            padding: 7px;
        }

        p {
            line-height: 1.2;
            font-size: larger;
            font-weight: bold;
        }

        cont-table {
            text-align: center;
            border-collapse: collapse;
            background: #fff;
            color: #936E25;
            font-size: 20px;
            margin: auto;
            margin-bottom: 50px;
            font-weight: bolder;
        }

        .cont-table td {
            padding: 15px;
        }

        .cont-table th {
            padding: 15px;
        }

        .cont-table tr:nth-child(even) {
            background: #DBF0CD;
        }

        .cont-table tr:nth-child(odd) {
            background: #E0FFFF;
        }
    </style>

}

<div class="container">
    <div class="row">
        <div class="col-sm-3">
            <!--add area here -->
        </div>
        <div class="col-sm-6">
            <h3 style="text-align:center;"><span class="glyphicon glyphicon-road"></span>&nbsp;&nbsp;Learn Punjabi Raavi Font Typing&nbsp;&nbsp;</h3>
            <h4 style="text-align:center;"><span class="glyphicon glyphicon-chevron-left"></span>&nbsp;&nbsp;@Html.ActionLink("Back To Learn Typing", "LearnTyping", "StartTyping")&nbsp;&nbsp;</h4>
            <h4 style="text-align:center;">&nbsp;&nbsp;Home Row : Lesson 1&nbsp;&nbsp;</h4>
            <h4 style="text-align:center;">&nbsp;&nbsp;@Html.ActionLink("Lesson 2", "Lesson2", "HomeRow")&nbsp;&nbsp;<span class="glyphicon glyphicon-chevron-right"></span></h4>
            <br />
            <img src="~/LearnTypingPhotos/HomeRow/HomeRowLesson1.jpg" style="width:550px;" />

            <br />
            <br />
            <table class="cont-table">
                <tbody>
                    <tr>
                        <th>
                            Key Combinations
                        </th>
                        <td>
                            a
                        </td>
                        <td>
                            s
                        </td>
                        <td>
                            d
                        </td>
                        <td>
                            f
                        </td>
                        <td>
                            g
                        </td>
                        <td>
                            h
                        </td>
                        <td>
                            j
                        </td>
                        <td>
                            k
                        </td>
                        <td>
                            l
                        </td>
                        <td>
                            ;
                        </td>
                        <td>
                            '
                        </td>
                    </tr>
                    <tr>
                        <th>
                            Raavi
                        </th>
                        <td>
                            ੋ
                        </td>
                        <td>
                            ੇ
                        </td>
                        <td>
                            ੍
                        </td>
                        <td>
                            ਿ
                        </td>
                        <td>
                            ੁ
                        </td>
                        <td>
                            ਪ
                        </td>
                        <td>
                            ਰ
                        </td>
                        <td>
                            ਕ
                        </td>
                        <td>
                            ਤ
                        </td>
                        <td>
                            ਚ
                        </td>
                        <td>
                            ਟ
                        </td>
                    </tr>
                </tbody>
            </table>

            <br />


            <section id="word-section"><span class="current-word">ੋ</span><span>ੋ</span><span>ੋ</span><span>ੋ</span><span>ਚ</span><span>ੇ</span><span>ੋ</span><span>ਚ</span><span>ਟ</span><span>ਕ</span><span>ਟ</span><span>ਪ</span><span>ੋ</span><span>ੇ</span><span>ੇ</span><span>ੇ</span><span>੍</span><span>ਰ</span><span>ਿ</span><span>ਕ</span><span>ਰ</span><span>੍</span><span>ਕ</span><span>ਿ</span><span>ਿ</span><span>ਚ</span><span>੍</span><span>ਿ</span><span>ਿ</span><span>ਕ</span><span>ਕ</span><span>ਰ</span><span>੍</span><span>ਟ</span><span>ੋ</span><span>ਿ</span><span>ੁ</span><span>ਰ</span><span>੍</span><span>ਕ</span><span>ਿ</span><span>ੁ</span><span>ਚ</span><span>ੇ</span><span>ੁ</span><span>ਿ</span><span>ਕ</span><span>ਚ</span><span>ੇ</span><span>੍</span><span>ਟ</span><span>ਿ</span><span>ਰ</span><span>ੇ</span><span>ੁ</span><span>ੇ</span><span>ੇ</span><span>ਕ</span><span>ਪ</span><span>ੋ</span><span>੍</span><span>ਰ</span><span>ਚ</span><span>੍</span><span>ਟ</span><span>ਿ</span><span>ਿ</span><span>ਟ</span><span>੍</span><span>ੋ</span><span>ਪ</span><span>ਟ</span><span>ਚ</span><span>ਿ</span><span>ੇ</span><span>ਚ</span><span>ਰ</span><span>ਚ</span><span>੍</span><span>ਟ</span><span>ਕ</span><span>ਿ</span><span>ੋ</span><span>ਰ</span><span>ਤ</span><span>ੁ</span><span>ੋ</span><span>ਚ</span><span>ੇ</span><span>ਪ</span><span>ੇ</span><span>ਿ</span><span>ਰ</span><span>ਪ</span><span>ਟ</span><span>ੁ</span><span>ਪ</span><span>ੇ</span><span>੍</span><span>ਿ</span><span>ਤ</span><span>ੋ</span><span>੍</span><span>ੋ</span><span>ਰ</span><span>ਚ</span><span>ਰ</span><span>ੇ</span><span>ੋ</span><span>ੁ</span><span>ਿ</span><span>ਪ</span><span>ੋ</span><span>ਿ</span><span>੍</span><span>ਪ</span><span>ਟ</span><span>ਿ</span><span>ੁ</span><span>ਰ</span><span>ਕ</span><span>ੋ</span><span>ਰ</span><span>ੁ</span><span>ਿ</span><span>ਚ</span><span>ਚ</span><span>ਪ</span><span>ੁ</span><span>੍</span><span>ਚ</span><span>ਿ</span><span>ੁ</span><span>ਰ</span><span>ੇ</span><span>ੇ</span><span>ੁ</span><span>ਿ</span><span>ਟ</span><span>ਤ</span><span>ੁ</span><span>ਚ</span><span>ੇ</span><span>ਟ</span><span>ਕ</span><span>ੁ</span><span>ੇ</span><span>ਪ</span><span>ਕ</span><span>ਪ</span><span>ੇ</span><span>ਰ</span><span>ੇ</span><span>੍</span><span>ਿ</span><span>ਟ</span><span>ੋ</span><span>ਰ</span><span>ਤ</span><span>ਿ</span><span>ਿ</span><span>ਰ</span><span>ਟ</span><span>ਚ</span><span>ਤ</span><span>ੇ</span><span>ਟ</span><span>ਟ</span><span>ੁ</span><span>ਿ</span><span>੍</span><span>ਟ</span><span>ੋ</span><span>ਪ</span><span>ੇ</span><span>ਿ</span><span>ੇ</span><span>ਚ</span><span>ਕ</span><span>ਿ</span><span>ਤ</span><span>ਰ</span><span>ੇ</span><span>ਕ</span><span>ਟ</span><span>੍</span><span>੍</span><span>ਚ</span><span>੍</span><span>ੇ</span><span>ਚ</span><span>ਰ</span><span>੍</span><span>ਰ</span><span>ਪ</span><span>ਟ</span><span>ਿ</span><span>ੋ</span><span>ੇ</span><span>੍</span><span>ਿ</span><span>੍</span><span>ਤ</span><span>ਪ</span><span>ਪ</span><span>ੇ</span><span>ਿ</span><span>ਕ</span><span>ਟ</span><span>ਚ</span><span>ੋ</span><span>ੋ</span><span>ੁ</span><span>ਚ</span><span>ਕ</span><span>ਚ</span><span>ਿ</span><span>ਪ</span><span>ਿ</span><span>ਚ</span><span>ਚ</span><span>ੋ</span><span>ਟ</span><span>੍</span><span>ਪ</span><span>ਕ</span><span>ਕ</span><span>੍</span><span>ਚ</span><span>ੋ</span><span>ੋ</span><span>੍</span><span>ਟ</span><span>ੁ</span><span>ਟ</span><span>ੋ</span><span>ਿ</span><span>ਕ</span><span>ੋ</span><span>ਰ</span><span>ਪ</span><span>ਕ</span><span>ਕ</span><span>ੋ</span><span>ੁ</span><span>ੁ</span><span>ੇ</span><span>ਰ</span><span>ੋ</span><span>ੋ</span><span>ਰ</span><span>ਿ</span><span>ੋ</span><span>ਪ</span><span>ੋ</span><span>ਕ</span><span>ਕ</span><span>ੋ</span><span>ੇ</span><span>ਰ</span><span>ਤ</span><span>ੋ</span><span>ਕ</span><span>ੋ</span><span>ਰ</span><span>ਕ</span><span>੍</span><span>ਕ</span><span>ਰ</span><span>ੇ</span><span>ੁ</span><span>ੋ</span><span>ੇ</span><span>ਚ</span><span>ੋ</span><span>ਕ</span><span>ਤ</span><span>੍</span><span>ਿ</span><span>ਚ</span><span>ੋ</span><span>ਰ</span><span>ਕ</span><span>ਰ</span><span>੍</span><span>ਕ</span><span>ੁ</span><span>ਚ</span><span>ਿ</span><span>ਕ</span><span>ਿ</span><span>ਕ</span><span>ਚ</span><span>ਤ</span><span>ੇ</span><span>ਿ</span><span>ੁ</span><span>੍</span><span>ੇ</span><span>ੋ</span><span>ਰ</span><span>ਕ</span><span>ੁ</span><span>ਰ</span><span>ੇ</span><span>੍</span><span>ਤ</span><span>ੋ</span><span>ਕ</span><span>ਕ</span><span>ੋ</span><span>ਚ</span><span>ੇ</span><span>੍</span><span>੍</span><span>ੁ</span><span>ੇ</span><span>ਟ</span><span>ਤ</span><span>ਪ</span><span>੍</span><span>ਕ</span><span>ੋ</span><span>ਕ</span><span>੍</span><span>ਤ</span><span>੍</span><span>ੇ</span><span>ੋ</span><span>ਿ</span><span>ਟ</span><span>ਤ</span><span>ਕ</span><span>ੁ</span><span>ਤ</span><span>ਪ</span><span>ਤ</span><span>ਿ</span><span>ਰ</span><span>ਟ</span><span>ੇ</span><span>ਚ</span><span>ਚ</span><span>੍</span><span>ੋ</span><span>ਤ</span><span>ਿ</span><span>ਿ</span><span>ਟ</span><span>੍</span></section>

            <br />
            <div id="errorDiv" style="text-align:center;"> <span id="errorMessage" style="text-align:center;color:red;font-weight:bold"></span></div>

            <section id="type-section">
                <input id="typebox" name="typebox" type="text" autofocus="" tabindex="1" onkeyup="typingTest(event)">

            </section>


            <div id="divtimer" style="text-align:center">
                <p id="test"></p>
                <button type="button" class="btn btn-success" id="clock" onclick="Clock();">Start</button>
            </div>


            <br />
            <div id="banner" style="text-align:center;">
                <p>Click on Start Button to Start Typing</p>
                @*<marquee style="font-weight:bold;color:cadetblue">If you see typed characters in English, Please Navigate to Set Up Raavi Font tab</marquee>*@
            </div>
            <div id="banner" style="text-align:center;">
                <p><b><u>Note:</u></b>If you see typed characters in English, Please Navigate to Set Up Raavi Font tab</p>
                @*<marquee style="font-weight:bold;color:cadetblue">If you see typed characters in English, Please Navigate to Set Up Raavi Font tab</marquee>*@
            </div>


            <div class="col-sm-3">
                <!--add area here -->
            </div>
        </div>
        @*<div class="test" style="width:400px;"> <canvas id="myChart"></canvas></div>
        <div class="test" style="width:400px;"> <canvas id="accuracyChart"></canvas></div>*@
        <div id="graphrowone">
            <div class="col-md-6">
                <canvas id="myChart"></canvas>
            </div>
            <div class="col-md-6">
                <canvas id="accuracyChart"></canvas>
            </div>
        </div>

        <div id="graphrowtwo">
            <div class="col-md-6">
                <canvas id="grossspeedchart"></canvas>
            </div>
            <div class="col-md-6">
                <canvas id="netspeedChart"></canvas>
            </div>
        </div>


    </div>
</div>

