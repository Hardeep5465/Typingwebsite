
@{
                /**/

                ViewBag.Title = "Lesson1";
}

@section Scripts
{
    <style type="text/css">
     
        #word-section {
            border: 1px solid #999;
            background-color: #fff;
        }

     

        section {
            width: 90%;
            margin: 0 auto;
            padding: 0.5em;
        }

        #word-section {
            font-family: Arial;
            font-size: 1.5em;
            height: 4em;
            line-height: 2em;
            /* hide 3rd line of text */
            border-radius: 0.25em;
            position: relative;
            overflow: hidden;
        }

            #word-section > span {
                display: inline-block;
                margin-left: 1em;
                /* emulate spaces between words */
            }

        #type-section {
            text-align: center;
        }

            #type-section > * {
                font-size: 1.5em;
                display: inline-block;
                border-radius: 0.25em;
                border: none;
                color: #fff;
                vertical-align: middle;
            }

        #typebox {
            font-family: Arial;
            width: 64%;
            color: #000;
            padding: 0.5em;
            box-shadow: -1px -1px 5px #383838;
        }

            #typebox:focus {
                outline: none;
            }

        #timer {
            width: 4em;
            background-color: #467F21;
            margin-right: 0;
        }

       

        #results {
            font-family: sans-serif;
            text-align: center;
            margin: 0 1%;
            display: block;
        }

            #results li {
                list-style: none;
            }

                #results li:first-child {
                    font-size: 1.5em;
                }

                #results li:nth-child(2) {
                    font-size: 0.8em;
                    line-height: 1em;
                }

            #results #results-stats {
                font-size: 0.6em;
            }

        
                

        /* hides small bit of residule text after scrolling */
        .magic-box {
            position: fixed;
            width: inherit;
            height: 0.5em;
            top: 54px;
            background-color: #fff;
        }

        .waiting {
            text-align: center;
            line-height: 1.5em;
            font-size: 3em;
        }

        .current-word {
            background-color: #dddddd;
        }

        .correct-word-c {
            color: #93C572;
        }

        .incorrect-word-c {
            color: #e50000;
        }

        .incorrect-word-bg {
            background-color: #e50000;
        }
    </style>



    <script type="text/javascript">

      

        // jQuery like selection of elements.
        "use strict";

        window.$ = document.querySelectorAll.bind(document);

        // Changes for  Firefox
        if (navigator.userAgent.match(/firefox/i)) {
            // Unicode font sizes
            var ffBtn = "font-weight: normal; font-size: 2em; margin-left: 0.3em;";
            $("#restart-symbol")[0].setAttribute("style", ffBtn);

            var ffwait = "line-height: 1em; font-size: 4em;";
            $(".waiting")[0].setAttribute("style", ffwait);
        }

        /////////////////////////////////////////

        // Sorted list of the 500 most common English words.
        var wordList = ["ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕੋ", "ਰੇ", "ਰੋ", "ਪੇ", "ਪੋ", "ਪਿ", "ਟੋ", "ਟੇ", "ਟ੍", "ਟਿ", "ਪਰ", "ਰੁ", "ਕੁ", "ਰੁ", "ਤੁ", "ਚੁ", "ਟੁ", "ਚਤ", "ਕਰ", "ਤਕ", "ਪਰ", "ਪੁ", "ਟਤ", "ਚਰ", "ਚਕ", "ਟਤ", "ਟਚ", "ਟਪ", "ਟਰ", "ਕਟ", "ਚ੍", "ਤ੍", "ਕ੍", "ਰ੍", "ਪ੍", "ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕੋ", "ਰੇ", "ਰੋ", "ਪੇ", "ਪੋ", "ਪਿ", "ਟੋ", "ਟੇ", "ਟ੍", "ਟਿ", "ਪਰ", "ਰੁ", "ਕੁ", "ਰੁ", "ਤੁ", "ਚੁ", "ਟੁ", "ਚਤ", "ਕਰ", "ਤਕ", "ਪਰ", "ਪੁ", "ਟਤ", "ਚਰ", "ਚਕ", "ਟਤ", "ਟਚ", "ਟਪ", "ਟਰ", "ਕਟ", "ਚ੍", "ਤ੍", "ਕ੍", "ਰ੍", "ਪ੍", "ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕੋ", "ਰੇ", "ਰੋ", "ਪੇ", "ਪੋ", "ਪਿ", "ਟੋ", "ਟੇ", "ਟ੍", "ਟਿ", "ਪਰ", "ਰੁ", "ਕੁ", "ਰੁ", "ਤੁ", "ਚੁ", "ਟੁ", "ਚਤ", "ਕਰ", "ਤਕ", "ਪਰ", "ਪੁ", "ਟਤ", "ਚਰ", "ਚਕ", "ਟਤ", "ਟਚ", "ਟਪ", "ਟਰ", "ਕਟ", "ਚ੍", "ਤ੍", "ਕ੍", "ਰ੍", "ਪ੍", "ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕੋ", "ਰੇ", "ਰੋ", "ਪੇ", "ਪੋ", "ਪਿ", "ਟੋ", "ਟੇ", "ਟ੍", "ਟਿ", "ਪਰ", "ਰੁ", "ਕੁ", "ਰੁ", "ਤੁ", "ਚੁ", "ਟੁ", "ਚਤ", "ਕਰ", "ਤਕ", "ਪਰ", "ਪੁ", "ਟਤ", "ਚਰ", "ਚਕ", "ਟਤ", "ਟਚ", "ਟਪ", "ਟਰ", "ਕਟ", "ਚ੍", "ਤ੍", "ਕ੍", "ਰ੍", "ਪ੍", "ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕੋ", "ਰੇ", "ਰੋ", "ਪੇ", "ਪੋ", "ਪਿ", "ਟੋ", "ਟੇ", "ਟ੍", "ਟਿ", "ਪਰ", "ਰੁ", "ਕੁ", "ਰੁ", "ਤੁ", "ਚੁ", "ਟੁ", "ਚਤ", "ਕਰ", "ਤਕ", "ਪਰ", "ਪੁ", "ਟਤ", "ਚਰ", "ਚਕ", "ਟਤ", "ਟਚ", "ਟਪ", "ਟਰ", "ਕਟ", "ਚ੍", "ਤ੍", "ਕ੍", "ਰ੍", "ਪ੍", "ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕਿ", "ਤਿ", "ਤੇ", "ਤੋ", "ਕੇ", "ਚੋ", "ਚਿ", "ਰਿ", "ਕੋ", "ਰੇ", "ਰੋ", "ਪੇ", "ਪੋ", "ਪਿ", "ਟੋ", "ਟੇ", "ਟ੍", "ਟਿ", "ਪਰ", "ਰੁ", "ਕੁ", "ਰੁ", "ਤੁ", "ਚੁ", "ਟੁ", "ਚਤ", "ਕਰ", "ਤਕ", "ਪਰ", "ਪੁ", "ਟਤ", "ਚਰ", "ਚਕ", "ਟਤ", "ਟਚ", "ਟਪ", "ਟਰ", "ਕਟ", "ਚ੍", "ਤ੍", "ਕ੍", "ਰ੍", "ਪ੍"];

        //////////////////////////////////////////

        // Knuth-Fisher-Yates Shuffle
        // http://bost.ocks.org/mike/shuffle/
        function shuffle(array) {
            var m = array.length,
                t = undefined,
                i = undefined;
            // While there remain elements to shuffle…
            while (m) {
                // Pick a remaining element…
                i = Math.floor(Math.random() * m--);
                // And swap it with the current element.
                t = array[m];
                array[m] = array[i];
                array[i] = t;
            }
            return array;
        }

        // Add words to word-section

        function addWords() {
            // clear existing word-section
            var wordSection = $("#word-section")[0];
            wordSection.innerHTML = "";

            for (var i = 300; i > 0; i--) {
                var words = shuffle(wordList);
                var wordSpan = "<span>" + words[i] + "</span>";
                wordSection.innerHTML += wordSpan;
            }
            // mark first word as current-word
            wordSection.firstChild.classList.add("current-word");

            // mark last word with magic-box
            // let magicBox = document.createElement("DIV");
            // magicBox.classList.add("magic-box");
            // wordSection.appendChild(magicBox);
        }

        //////////////////////////////////////////

        // Word Colors
        var colorCurrentWord = " #dddddd";
        var colorCorrectWord = "#93C572";
        var colorIncorrectWord = "#e50000";

        // Word Count and other data.
        var wordData = {
            seconds: 300,
            correct: 0,
            incorrect: 0,
            total: 0,
            typed: 0
        };

        //////////////////////////////////////////
        // Initial implementation notes:
        // next word on <space>, if empty, then set value=""
        // after <space> if value == current-word, mark as correct-word
        // else, mark as incorrect-word
        // if value.length != current-word[:value.length], mark as incorrect-word
        // else, mark as current-word
        //////////////////////////////////////////

        function checkWord(word) {
            var wlen = word.value.length;
            // how much we have of the current word.
            var current = $(".current-word")[0];
            var currentSubstring = current.innerHTML.substring(0, wlen);
            // check if we have any typing errors
            if (word.value.trim() != currentSubstring) {
                current.classList.add("incorrect-word-bg");
                return false;
            } else {
                current.classList.remove("incorrect-word-bg");
                return true;
            }
        }

        function submitWord(word) {
            // update current-word and
            // keep track of correct & incorrect words
            var current = $(".current-word")[0];

            if (checkWord(word)) {
                current.classList.remove("current-word");
                current.classList.add("correct-word-c");
                wordData.correct += 1;
            } else {
                current.classList.remove("current-word", "incorrect-word-bg");
                current.classList.add("incorrect-word-c");
                wordData.incorrect += 1;
            }
            // update wordData
            wordData.total = wordData.correct + wordData.incorrect;

            // make the next word the new current-word.
            current.nextSibling.classList.add("current-word");
        }

        function clearLine() {
            // remove past words once you get to the next line
            var wordSection = $("#word-section")[0];
            var current = $(".current-word")[0]; // second line (first word)
            var previous = current.previousSibling; // first line (last word)
            var children = $(".correct-word-c, .incorrect-word-c").length;

            // <span>'s on the next line have a greater offsetTop value
            // than those on the top line.
            // Remove words until the first word on the second line
            // is the fistChild of word-section.
            if (current.offsetTop > previous.offsetTop) {
                for (var i = 0; i < children; i++) {
                    wordSection.removeChild(wordSection.firstChild);
                }
            }
        }

        function isTimer(seconds) {
            // BUG: page refresh with keyboard triggers onkeyup and starts timer
            // Use restart button to reset timer

            var time = seconds;
            // only set timer once
            var one = $("#timer > span")[0].innerHTML;
            if (one == "300") {
                (function () {
                    var typingTimer = setInterval(function () {
                        if (time <= 0) {
                            clearInterval(typingTimer);
                        } else {
                            time -= 1;
                            var timePad = time < 10 ? "0" + time : time; // zero padded
                            $("#timer > span")[0].innerHTML = timePad;
                        }
                    }, 1000);
                })();
            } else if (one == "300") {
                return false;
            }
            return true;
        }

         //function typingTest(e) {
            //    // Char:        Key Code:
            //    // <space>      32
            //    // <backspace>  8
            //    // <shift>      16
            //    // [A-Z]        65-90
            //    // [' "]        222

            //    // Get key code of current key pressed.
            //    e = e || window.event;
            //    var kcode = e.keyCode;
            //    var word = $("#typebox")[0];

            //    // check if empty (starts with space)
            //    if (word.value.match(/^\s/g)) {
            //        word.value = "";
            //    } else {
            //        // Only score when timer is on: old condition:checking using p tag is there or not
            //        if (isTimer(wordData.seconds)) {
            //            {
            //                checkWord(word); // checks for typing errors while you type
            //                // <space> submits words
            //                if (kcode == 32) {
            //                    submitWord(word); // keep track of correct / incorrect words
            //                    clearLine(); // get rid of old words
            //                    $("#typebox")[0].value = ""; // clear typebox after each word
            //                }
            //                wordData.typed += 1; // count each valid character typed
            //            } else {
            //                // Display typing test results.
            //                calculateWPM(wordData);
            //            }
            //        }
            //    }

        


            function typingTest(e) {
                // Char:        Key Code:
                // <space>      32
                // <backspace>  8
                // <shift>      16
                // [A-Z]        65-90
                // [' "]        222

                //start timer
               // markPresent();
             
                // Get key code of current key pressed.
                e = e || window.event;
                var kcode = e.keyCode;
                var word = $("#typebox")[0];

               


               //  check if empty (starts with space)
                if (word.value.match(/^\s/g) || isRunning == false) {
                    word.value = "";
                    //alert("Clock not running!")
                    document.getElementById("errorMessage").innerText = "Please Click on Start!";
                }


                
                else { 
                    if (word.value.match(/^\s/g)) {
                        word.value = "";

                    }


                    else {

                        checkWord(word); // checks for typing errors while you type
                        // <space> submits words
                        if (kcode == 32) {
                            submitWord(word); // keep track of correct / incorrect words
                            clearLine(); // get rid of old words
                            $("#typebox")[0].value = ""; // clear typebox after each word
                        }
                        wordData.typed += 1; // count each valid character typed
                    }
                }
             
              }
                
                       


        /*Timer code*/


        var clock = null;//Define a global variable for the clock
        var isRunning = false;
        var initTime = null;


        function Clock() {

            //disable span error
            document.getElementById("errorMessage").innerText = "";

            //set autofocus to typing textbox
            document.getElementById("typebox").focus();

            //console.log("Called clock");
            if (clock != null) {
                //Clock is running
                //console.log("Stopping clock");
                clearInterval(clock);
                clock = null;
                document.getElementById("clock").innerText = "Start";
                document.getElementById("test").innerText = "";
                isRunning = false;
            } else {
                //Clock is not running
                //console.log("Starting clock");
                setInitialTime();
                clock = setInterval(updateClock, 1000); // Starts calling updateClock, which should do what your need with the clock.
                document.getElementById("clock").innerText = "Stop"; //Changes the clock button text
                updateClock();
                isRunning = true;
            }
        }

        function setInitialTime() {
            initTime = new Date().getTime();
        }

        function updateClock() {
            //console.log("Clock update");
            let currTime = new Date().getTime(),
                diff = currTime - initTime;
            //console.log("Actual time is " + currTime);
            //console.log("Time inited was " + initTime);
            //console.log(format(diff / 1000));
            document.getElementById("test").innerText = format(diff / 1000);
        }

        function format(seconds) {
            var numhours = parseInt(Math.floor(((seconds % 31536000) % 86400) / 3600), 10);
            var numminutes = parseInt(Math.floor((((seconds % 31536000) % 86400) % 3600) / 60), 10);
            var numseconds = parseInt((((seconds % 31536000) % 86400) % 3600) % 60, 10);
            return ((numhours < 10) ? "0" + numhours : numhours) + ":" + ((numminutes < 10) ? "0" + numminutes : numminutes) + ":" + ((numseconds < 10) ? "0" + numseconds : numseconds);
        }
    </script>

    <style type="text/css">
        table, th, td {
          
            border-collapse: collapse;
            padding:7px;
        }
        p{
            line-height:1.2;
            font-size:larger;
            font-weight:bold;
        }

        cont-table {
            text-align: center;
            border-collapse: collapse;
            background: #fff;
            color: #936E25;
            font-size: 20px;
            margin: auto;
            margin-bottom: 50px;
            font-weight:bolder;
        }

        .cont-table td {
            padding: 15px;
        }

        .cont-table th {
            padding: 15px;
        }

        .cont-table tr:nth-child(even) {
            background: #DBF0CD;
        }
        .cont-table tr:nth-child(odd) {
            background: #E0FFFF;
        }
            
    </style>
    
}

    <div class="container">
        <div class="row">
            <div class="col-sm-3">
                <!--add area here -->
            </div>
            <div class="col-sm-6">
                <h3 style="text-align:center;"><span class="glyphicon glyphicon-road"></span>&nbsp;&nbsp;Learn Punjabi Raavi Font Typing&nbsp;&nbsp;</h3>
                <h4 style="text-align:center;"><span class="glyphicon glyphicon-chevron-left"></span>&nbsp;&nbsp;@Html.ActionLink("Back To Learn Typing", "LearnTyping", "StartTyping")&nbsp;&nbsp;</h4>
                <h4 style="text-align:center;">&nbsp;&nbsp;Home Row : Lesson 1&nbsp;&nbsp;</h4>
                <h4 style="text-align:center;">&nbsp;&nbsp;@Html.ActionLink("Lesson 2", "LearnTyping", "HomeRow")&nbsp;&nbsp;<span class="glyphicon glyphicon-chevron-right"></span></h4>
                <br />
                <img src="~/LearnTypingPhotos/HomeRow/HomeRowLesson1.jpg" style="width:550px;" />

                <br />
                <br />
                <table  class="cont-table">
                    <tbody>
                        <tr>
                            <th>
                                Key Combinations
                            </th>
                            <td>
                                a
                            </td>
                            <td>
                                s
                            </td>
                            <td>
                                d
                            </td>
                            <td>
                                f
                            </td>
                            <td>
                                g
                            </td>
                            <td>
                                h
                            </td>
                            <td>
                                j
                            </td>
                            <td>
                                k
                            </td>
                            <td>
                                l
                            </td>
                            <td>
                                ;
                            </td>
                            <td>
                                '
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Raavi
                            </th>
                            <td>
                                ੋ
                            </td>
                            <td>
                                ੇ
                            </td>
                            <td>
                                ੍
                            </td>
                            <td>
                                ਿ
                            </td>
                            <td>
                                ੁ
                            </td>
                            <td>
                                ਪ
                            </td>
                            <td>
                                ਰ
                            </td>
                            <td>
                                ਕ
                            </td>
                            <td>
                                ਤ
                            </td>
                            <td>
                                ਚ
                            </td>
                            <td>
                                ਟ
                            </td>
                        </tr>
                    </tbody>
                </table>

                <br />


                <section id="word-section"><span class="current-word">ਰਿ</span><span>ਰੁ</span><span>ਟੇ</span><span>ਪੋ</span><span>ਚਿ</span><span>ਕਿ</span><span>ਕ੍</span><span>ਰੇ</span><span>ਪਿ</span><span>ਰਿ</span><span>ਪੁ</span><span>ਕਟ</span><span>ਟ੍</span><span>ਤ੍</span><span>ਟੋ</span><span>ਪੇ</span><span>ਕ੍</span><span>ਰੋ</span><span>ਚੋ</span><span>ਰਿ</span><span>ਪ੍</span><span>ਚੋ</span><span>ਰਿ</span><span>ਰ੍</span><span>ਚਕ</span><span>ਕੇ</span><span>ਕੇ</span><span>ਕਟ</span><span>ਕ੍</span><span>ਤੁ</span><span>ਟਤ</span><span>ਰੇ</span><span>ਟਪ</span><span>ਰ੍</span><span>ਕੇ</span><span>ਚੋ</span><span>ਟੋ</span><span>ਰਿ</span><span>ਤਿ</span><span>ਚਿ</span><span>ਕਿ</span><span>ਕੇ</span><span>ਰੁ</span><span>ਤਿ</span><span>ਕਟ</span><span>ਤੇ</span><span>ਟਰ</span><span>ਤ੍</span><span>ਟੇ</span><span>ਚੋ</span><span>ਪ੍</span><span>ਟਚ</span><span>ਚ੍</span><span>ਟਤ</span><span>ਰਿ</span><span>ਤੇ</span><span>ਚੁ</span><span>ਪੇ</span><span>ਤ੍</span><span>ਟ੍</span><span>ਕੁ</span><span>ਪਿ</span><span>ਤੋ</span><span>ਤੋ</span><span>ਟਚ</span><span>ਪਰ</span><span>ਤ੍</span><span>ਕਰ</span><span>ਕੇ</span><span>ਰਿ</span><span>ਚਕ</span><span>ਚਤ</span><span>ਤਿ</span><span>ਚੋ</span><span>ਪੁ</span><span>ਚਤ</span><span>ਰ੍</span><span>ਚਿ</span><span>ਚੋ</span><span>ਟਿ</span><span>ਪੇ</span><span>ਤੁ</span><span>ਰੁ</span><span>ਪੁ</span><span>ਚੁ</span><span>ਟੁ</span><span>ਟੇ</span><span>ਕਟ</span><span>ਰ੍</span><span>ਕਿ</span><span>ਚਤ</span><span>ਤਕ</span><span>ਕਿ</span><span>ਟੁ</span><span>ਟਚ</span><span>ਪੋ</span><span>ਰਿ</span><span>ਰੁ</span><span>ਰ੍</span><span>ਚਿ</span><span>ਕੇ</span><span>ਟਰ</span><span>ਚੋ</span><span>ਚੋ</span><span>ਕਿ</span><span>ਚੁ</span><span>ਚੁ</span><span>ਪਰ</span><span>ਪੇ</span><span>ਤਿ</span><span>ਟਚ</span><span>ਪਰ</span><span>ਟਤ</span><span>ਤਿ</span><span>ਤੁ</span><span>ਟੁ</span><span>ਕੇ</span><span>ਪੇ</span><span>ਤੇ</span><span>ਚਤ</span><span>ਰੁ</span><span>ਟਤ</span><span>ਤਿ</span><span>ਤਿ</span><span>ਟਪ</span><span>ਚਰ</span><span>ਰੁ</span><span>ਪੁ</span><span>ਤੇ</span><span>ਚਰ</span><span>ਕੁ</span><span>ਰ੍</span><span>ਟਪ</span><span>ਟੋ</span><span>ਕਿ</span><span>ਟਰ</span><span>ਰ੍</span><span>ਪੋ</span><span>ਤਕ</span><span>ਕਰ</span><span>ਟਪ</span><span>ਰੁ</span><span>ਰਿ</span><span>ਟ੍</span><span>ਤੋ</span><span>ਟਿ</span><span>ਤੇ</span><span>ਚੋ</span><span>ਚਿ</span><span>ਪ੍</span><span>ਪ੍</span><span>ਚਿ</span><span>ਟੋ</span><span>ਚਰ</span><span>ਪਰ</span><span>ਰੁ</span><span>ਤੇ</span><span>ਕੁ</span><span>ਟਰ</span><span>ਚੋ</span><span>ਤਿ</span><span>ਚਕ</span><span>ਟਪ</span><span>ਟਤ</span><span>ਤੇ</span><span>ਪਰ</span><span>ਟਰ</span><span>ਚੋ</span><span>ਚੁ</span><span>ਚਤ</span><span>ਟ੍</span><span>ਟਚ</span><span>ਕੇ</span><span>ਚਕ</span><span>ਕਿ</span><span>ਟਤ</span><span>ਕੇ</span><span>ਟਤ</span><span>ਤੇ</span><span>ਚਰ</span><span>ਰਿ</span><span>ਕਰ</span><span>ਕਰ</span><span>ਟ੍</span><span>ਕਟ</span><span>ਤਿ</span><span>ਤੋ</span><span>ਕਿ</span><span>ਚੋ</span><span>ਰਿ</span><span>ਪੋ</span><span>ਰੁ</span><span>ਤਕ</span><span>ਟਤ</span><span>ਚੋ</span><span>ਟਪ</span><span>ਕਟ</span><span>ਕੇ</span><span>ਟ੍</span><span>ਟਤ</span><span>ਕਿ</span><span>ਚਕ</span><span>ਰੁ</span><span>ਤ੍</span><span>ਰੋ</span><span>ਕ੍</span><span>ਤਿ</span><span>ਪਿ</span><span>ਤਕ</span><span>ਪਰ</span><span>ਚੋ</span><span>ਰੁ</span><span>ਰ੍</span><span>ਚਿ</span><span>ਚਿ</span><span>ਤਿ</span><span>ਟਰ</span><span>ਰੁ</span><span>ਚਕ</span><span>ਟਚ</span><span>ਤੁ</span><span>ਟੋ</span><span>ਟੁ</span><span>ਕੇ</span><span>ਚਿ</span><span>ਰ੍</span><span>ਟਿ</span><span>ਰਿ</span><span>ਤੇ</span><span>ਟ੍</span><span>ਰ੍</span><span>ਟਤ</span><span>ਟੇ</span><span>ਕੇ</span><span>ਪੁ</span><span>ਕੇ</span><span>ਚੁ</span><span>ਤੇ</span><span>ਕੋ</span><span>ਪਰ</span><span>ਚਕ</span><span>ਰੁ</span><span>ਕੇ</span><span>ਟਿ</span><span>ਟੁ</span><span>ਤੋ</span><span>ਤਿ</span><span>ਰਿ</span><span>ਚਤ</span><span>ਚਰ</span><span>ਕਟ</span><span>ਰਿ</span><span>ਪੋ</span><span>ਟਰ</span><span>ਚੋ</span><span>ਰਿ</span><span>ਰੇ</span><span>ਪੋ</span><span>ਤੋ</span><span>ਚੋ</span><span>ਟੁ</span><span>ਟੋ</span><span>ਪੁ</span><span>ਚ੍</span><span>ਚਿ</span><span>ਚਕ</span><span>ਟੋ</span><span>ਕੇ</span><span>ਪੇ</span><span>ਟਿ</span><span>ਤੋ</span><span>ਟਿ</span><span>ਪ੍</span><span>ਪਰ</span><span>ਤੋ</span><span>ਰਿ</span><span>ਚ੍</span><span>ਕ੍</span><span>ਰਿ</span><span>ਚਿ</span><span>ਟੇ</span><span>ਚੁ</span><span>ਕਿ</span><span>ਕ੍</span><span>ਤ੍</span><span>ਚੋ</span><span>ਪੇ</span><span>ਚਰ</span><span>ਚੋ</span><span>ਟਿ</span><span>ਚੁ</span><span>ਕਿ</span><span>ਟੇ</span><span>ਟਰ</span><span>ਕ੍</span><span>ਰਿ</span><span>ਤਿ</span><span>ਤਿ</span><span>ਕੇ</span><span>ਕਟ</span></section>
                <br />
                <div id="errorDiv" style="text-align:center;"> <span id="errorMessage" style="text-align:center;color:red;font-weight:bold"></span></div>

                <section id="type-section">
                    <input id="typebox" name="typebox" type="text" autofocus="" tabindex="1" onkeyup="typingTest(event)">

                </section>


                <div id="divtimer" style="text-align:center">
                    <p id="test"></p>
                    <button type="button" class="btn btn-success" id="clock" onclick="Clock();">Start</button>
                </div>


                <br />
                <div id="banner" style="text-align:center;">
                    <p>Click on Start Button to Start Typing</p>
                    @*<marquee style="font-weight:bold;color:cadetblue">If you see typed characters in English, Please Navigate to Set Up Raavi Font tab</marquee>*@
                </div>
                <div id="banner" style="text-align:center;">
                    <p><b><u>Note:</u></b>If you see typed characters in English, Please Navigate to Set Up Raavi Font tab</p>
                    @*<marquee style="font-weight:bold;color:cadetblue">If you see typed characters in English, Please Navigate to Set Up Raavi Font tab</marquee>*@
                </div>


                <div class="col-sm-3">
                    <!--add area here -->
                </div>
            </div>
        </div>
    </div>

